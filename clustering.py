# -*- coding: utf-8 -*-
"""clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R2ZTSGhzK0TN-sF-OFftI7z-BZwuSPrJ
"""

from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D 
# import mplcursors
import pandas as pd
import numpy as np
import plotly.graph_objs as go
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot

#######Path for excel sheet 
train_path = r"/content/drive/My Drive/acviss/Acviss interview - Training set.xlsx"
test_path = r"/content/drive/My Drive/acviss/Acviss interview - Test set.xlsx"
####excel read
ds_train = pd.read_excel(train_path)
ds_test = pd.read_excel(test_path)

##training and predict on train data and test data for visualizations
kmeans = KMeans(n_clusters=5, random_state=0).fit(ds_train)
values = kmeans.predict(ds_train)
test_values = kmeans.predict(ds_test)


####plot of training data  
trace1 = go.Scatter3d(
    x=ds_train['product_MRP'],
    y= ds_train['product_ratings'],
    z = ds_train['seller_ratings'],
    text = ['product_MRP: %d<br>product_ratings: %.3f<br>seller_ratings :%.3f'%(t,s,m) for t,s,m in ds_train.loc[:,['product_MRP','product_ratings','seller_ratings']].values],  # <-- added line!
    # hovertext='text '+ ds_train['product_MRP'],
    hoverinfo='text',
    marker=dict(
        color=values,
        showscale=True,
        colorbar=dict(title='Cluster')
    ),
    mode='markers',

)

layout = go.Layout (title='Training Data',
        scene = dict(
            xaxis = dict (title = 'product_MRP'),
            yaxis = dict (title = 'product_ratings'),
            zaxis = dict (title = 'seller_ratings')
        )
    )
fig = go.Figure(data=[trace1], layout = layout)
iplot(fig)

####plot of Test data  
trace1 = go.Scatter3d(
    
    x=ds_test['product_MRP'],
    y= ds_test['product_ratings'],
    z = ds_test['seller_ratings'],
    text = ['product_MRP: %d<br>product_ratings: %.3f<br>seller_ratings :%.3f'%(t,s,m) for t,s,m in ds_test.loc[:,['product_MRP','product_ratings','seller_ratings']].values],  # <-- added line!
    # hovertext='text '+ ds_train['product_MRP'],
    hoverinfo='text',
    marker=dict(
        color=values,
        showscale=True,
        colorbar=dict(title='Cluster')
    ),
    mode='markers',

)

layout = go.Layout (title='Test Data',
        scene = dict(
            xaxis = dict (title = 'product_MRP'),
            yaxis = dict (title = 'product_ratings'),
            zaxis = dict (title = 'seller_ratings')
        )
    )
fig = go.Figure(data=[trace1], layout = layout)
iplot(fig)